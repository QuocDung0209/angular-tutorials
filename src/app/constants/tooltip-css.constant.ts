export const TS_CODE = "    import { createPopper } from '@popperjs/core';\n    const button: any = document.querySelector('#button');\n    const tooltip: any = document.querySelector('#tooltip');\n\n    if (button && tooltip) {\n      const popperInstance = createPopper(button, tooltip, {\n        placement: 'top',\n        modifiers: [\n          {\n            name: 'offset',\n            options: {\n              offset: [0, 8],\n            },\n          },\n        ],\n      });\n\n      function show() {\n        // Make the tooltip visible\n        tooltip.setAttribute('data-show', '');\n\n        // Update its position\n        popperInstance.update();\n      }\n\n      function hide() {\n        // Hide the tooltip\n        tooltip.removeAttribute('data-show');\n      }\n\n      const showEvents = ['mouseenter', 'focus'];\n      const hideEvents = ['mouseleave', 'blur'];\n\n      showEvents.forEach(event => {\n        button.addEventListener(event, show);\n      });\n\n      hideEvents.forEach(event => {\n        button.addEventListener(event, hide);\n      });\n    }";

export const CSS_CODE = "#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n  position: fixed !important;\n  display: none;\n}\n\n#tooltip[data-show] {\n  display: block;\n}\n\n#arrow,\n#arrow::before {\n  position: fixed;\n  width: 8px;\n  height: 8px;\n  background: inherit;\n}\n\n#arrow {\n  visibility: hidden;\n}\n\n#arrow::before {\n  visibility: visible;\n  content: \"\";\n  transform: rotate(45deg);\n}\n\n#tooltip[data-popper-placement^=\"top\"] > #arrow {\n  bottom: -4px;\n}\n\n#tooltip[data-popper-placement^=\"bottom\"] > #arrow {\n  top: -4px;\n}\n\n#tooltip[data-popper-placement^=\"left\"] > #arrow {\n  right: -4px;\n}\n\n#tooltip[data-popper-placement^=\"right\"] > #arrow {\n  left: -4px;\n}";